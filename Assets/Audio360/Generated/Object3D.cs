// Copyright (c) 2018-present, Facebook, Inc. 
// @generated
//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace TBE {

public class Object3D : TransportControl {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal Object3D(global::System.IntPtr cPtr, bool cMemoryOwn) : base(Audio360CSharpPINVOKE.Object3D_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  public static global::System.Runtime.InteropServices.HandleRef getCPtr(Object3D obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new global::System.MethodAccessException("C++ destructor does not have public access");
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public virtual EngineError setPosition(TBVector position) {
    EngineError ret = (EngineError)Audio360CSharpPINVOKE.Object3D_setPosition(swigCPtr, TBVector.getCPtr(position));
    if (Audio360CSharpPINVOKE.SWIGPendingException.Pending) throw Audio360CSharpPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual TBVector getPosition() {
    TBVector ret = new TBVector(Audio360CSharpPINVOKE.Object3D_getPosition(swigCPtr), true);
    return ret;
  }

  public virtual EngineError setRotation(TBQuat rotation) {
    EngineError ret = (EngineError)Audio360CSharpPINVOKE.Object3D_setRotation__SWIG_0(swigCPtr, TBQuat.getCPtr(rotation));
    if (Audio360CSharpPINVOKE.SWIGPendingException.Pending) throw Audio360CSharpPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual EngineError setRotation(TBVector forward, TBVector up) {
    EngineError ret = (EngineError)Audio360CSharpPINVOKE.Object3D_setRotation__SWIG_1(swigCPtr, TBVector.getCPtr(forward), TBVector.getCPtr(up));
    if (Audio360CSharpPINVOKE.SWIGPendingException.Pending) throw Audio360CSharpPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual TBQuat getRotation() {
    TBQuat ret = new TBQuat(Audio360CSharpPINVOKE.Object3D_getRotation(swigCPtr), true);
    return ret;
  }

}

}
